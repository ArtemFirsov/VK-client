//
//  NewsFeedInteractor.swift
//  VK-client
//
//  Created by Artem Firsov on 10/28/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewsFeedBusinessLogic
{
    func doSomething(request: NewsFeed.Something.Request.RequestType)
}

protocol NewsFeedDataStore
{
  //var name: String { get set }
}

class NewsFeedInteractor: NewsFeedBusinessLogic, NewsFeedDataStore
{
  var presenter: NewsFeedPresentationLogic?
  var worker: NewsFeedWorker?
    
    private var apiService = ApiService()
  // MARK: Do something
  
    func doSomething(request: NewsFeed.Something.Request.RequestType)
  {
    worker = NewsFeedWorker()
    worker?.doSomeWork()
        
        switch request {
       
        case .some:
            print("some interactor")
        case .getFeed:
            print("getfeed interactor")
        case .getNewsFeed:
            self.apiService.getCleanNews { [weak self] (feedResponse) in
                guard let self = self else { return }
                
//                feedResponse.items.map { (news) in
//                    print(news.attachments)
//                }
                
                self.presenter?.presentSomething(response: .presentNewsFeed(feed: feedResponse))
                
            }
        }
        
  }
    
}
